/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.LoginController;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import vista.interfaces.IEspecialidades;

/**
 *
 * @author Usuario
 */
public class JFEspecialidades extends javax.swing.JFrame implements IEspecialidades {
    
    private DefaultTableModel model = new DefaultTableModel();
    /**
     * Creates new form JFPerfil
     */
    public JFEspecialidades() {
        initComponents();
        jtbEspecialidades.setModel(model);
        jbtCerrar.setName(JBT_CERRAR);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbEspecialidades = new javax.swing.JTable();
        jbtCerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Especialidades");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtbEspecialidades.setBackground(new java.awt.Color(149, 231, 255));
        jtbEspecialidades.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jtbEspecialidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Especialidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtbEspecialidades);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 392, 216));

        jbtCerrar.setText("Cerrar");
        getContentPane().add(jbtCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 238, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/image (1).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtCerrar;
    private javax.swing.JTable jtbEspecialidades;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setControlador(LoginController c) {
        jbtCerrar.addActionListener(c);
    }

    @Override
    public void arranca() {
        this.setVisible(true);
        centrarVentana();
    }

    @Override
    public void ocultar() {
        this.setVisible(false);
    }
    
    public void centrarVentana() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int anchoVentana = getWidth();
        int altoVentana = getHeight();
    
        int x = (dim.width - anchoVentana) / 2;
        int y = (dim.height - altoVentana) / 2;
    
        setLocation(x, y);
    }

    @Override
    public void mostrarPanel(String txt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void limpiarTexto() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void enfocar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void seleccionarText() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setTitulo(String txt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object getObjeto(String id) {
        Object o = null;
        switch (id) {
            case JBT_CERRAR:
                o = jbtCerrar;
                break;
            default:
                throw new AssertionError();
        }
        return o;
    }

    @Override
    public void setTexto(String obj, String txt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actualizarTabla(Object[][] data) {
//        model = new DefaultTableModel();
//        jtbEspecialidades.setModel(model);
//        model = (DefaultTableModel) jtbEspecialidades.getModel();
        model.addColumn("Codigo");
        model.addColumn("Especialidad");
        jtbEspecialidades.setModel(model);
        for (Object[] rowData : data) {
//            model.addRow(rowData);
            model.addRow(new Object[]{rowData[0], rowData[1]});
        }
    }

    @Override
    public void limpiarTexto(String obj) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
