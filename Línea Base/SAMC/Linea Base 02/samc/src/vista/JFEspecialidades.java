/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.LoginController;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import utilitarios.Item;
import vista.interfaces.IEspecialidades;

import java.awt.Color;
/**
 *
 * @author Usuario
 */
public class JFEspecialidades extends javax.swing.JFrame implements IEspecialidades {
    int xMouse, yMouse;
//    private DefaultTableModel model = new DefaultTableModel();
//    private JTableUtil jtuEspecialidades = new JTableUtil();;
    private DefaultComboBoxModel<Item> modelCombo = null;
    /**
     * Creates new form JFPerfil
     */
    public JFEspecialidades() {
        initComponents();
//        jtbEspecialidades.setModel(model);
        jcbEspecialidades.setName(JCB_ESPECIALIDADES);
        jbtCerrar.setName(JBT_CERRAR);
        rsscalelabel.RSScaleLabel.setScaleLabel(jLabel4, "src/img/fondo-saturado.png");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exitPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jbtCerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jcbEspecialidades = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaHorario = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setTitle("Visualización de Horarios y Especialidades");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitPanel.setOpaque(false);
        exitPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitPanelMouseExited(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("X");
        exitPanel.add(jLabel5);

        getContentPane().add(exitPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 50, 50));

        jbtCerrar.setBackground(new java.awt.Color(255, 255, 255));
        jbtCerrar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbtCerrar.setText("Cerrar");
        jbtCerrar.setBorder(null);
        getContentPane().add(jbtCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 70, 30));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Especialidad:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 206, -1));

        jcbEspecialidades.setBorder(null);
        getContentPane().add(jcbEspecialidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 230, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Horario de Atención:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 206, -1));

        jtaHorario.setColumns(20);
        jtaHorario.setRows(5);
        jScrollPane2.setViewportView(jtaHorario);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 83, 420, 150));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 440, 270));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/image (1).png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 290));

        jPanel1.setOpaque(false);
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPanelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitPanelMouseClicked

    private void exitPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPanelMouseEntered
        exitPanel.setBackground(Color.red);
        exitPanel.setOpaque(true);
        exitPanel.setForeground(Color.black);
    }//GEN-LAST:event_exitPanelMouseEntered

    private void exitPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPanelMouseExited
        exitPanel.setBackground(Color.white);
        exitPanel.setForeground(Color.white);
        exitPanel.setOpaque(false);
    }//GEN-LAST:event_exitPanelMouseExited

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse,y - yMouse);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel exitPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtCerrar;
    private javax.swing.JComboBox<Item> jcbEspecialidades;
    private javax.swing.JTextArea jtaHorario;
    // End of variables declaration//GEN-END:variables

//    @Override
//    public void setControlador(LoginController c, JTableController c2) {
//        jbtCerrar.addActionListener(c);
////        jtuEspecialidades.setController(c2);
//    }
    
    @Override
    public void setControlador(LoginController c) {
        jbtCerrar.addActionListener(c);
//        jtuEspecialidades.setController(c2);
        jcbEspecialidades.addItemListener(c);
    }

    @Override
    public void arranca() {
        this.setVisible(true);
        centrarVentana();
    }

    @Override
    public void ocultar() {
        this.setVisible(false);
    }
    
    public void centrarVentana() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int anchoVentana = getWidth();
        int altoVentana = getHeight();
    
        int x = (dim.width - anchoVentana) / 2;
        int y = (dim.height - altoVentana) / 2;
    
        setLocation(x, y);
    }

    @Override
    public void mostrarPanel(String txt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void limpiarTexto() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void enfocar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void seleccionarText() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setTitulo(String txt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object getObjeto(String id) {
        Object o = null;
        switch (id) {
            case JBT_CERRAR:
                o = jbtCerrar;
                break;
            case JCB_ESPECIALIDADES:
                o = jcbEspecialidades;
                break;
            default:
                throw new AssertionError();
        }
        return o;
    }

    @Override
    public void setTexto(String obj, String txt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

//    @Override
//    public void actualizarTabla(Object[][] data) {
//        model = new DefaultTableModel();
////        jtbEspecialidades.setModel(model);
////        model = (DefaultTableModel) jtbEspecialidades.getModel();
//        model.addColumn("Codigo");
//        model.addColumn("Especialidad");
////        model.addColumn("Cupos");
//        model.addColumn("Acción");
//        jtbEspecialidades.setModel(model);
//        jtuEspecialidades.getJButtonInJTable(jtbEspecialidades, 2);
//        for (Object[] rowData : data) {
////            model.addRow(rowData);
//            model.addRow(new Object[]{rowData[0], rowData[1], rowData[2]});
//        }
//        TableColumn column;
//        for (int i = 0; i < jtbEspecialidades.getColumnCount(); i++) {
//            column = jtbEspecialidades.getColumnModel().getColumn(i);
//            
//            // Establecer un ancho fijo para la columna (por ejemplo, 150 píxeles)
//            // column.setPreferredWidth(150);
//
//            // Ajustar automáticamente la longitud de la columna según el contenido
//            int max = 0;
//            for (int row = 0; row < jtbEspecialidades.getRowCount(); row++) {
//                TableCellRenderer renderer = jtbEspecialidades.getCellRenderer(row, i);
//                Component comp = jtbEspecialidades.prepareRenderer(renderer, row, i);
//                max = Math.max(comp.getPreferredSize().width, max);
//            }
//            column.setPreferredWidth(max);
//        }
//    }
    
    @Override
    public void limpiarTexto(String obj) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String getTexto(String obj) {
        String rpta = "";
        switch (obj) {
            case JCB_ESPECIALIDADES:
                rpta = (String) jcbEspecialidades.getSelectedItem();
                break;
            default:
                throw new AssertionError();
        }
        return rpta;
    }

//    @Override
//    public int getIdSeleccionada() {
//        int id = -1;
//        if (jtbEspecialidades.getColumnCount() > 0) {
//            id = (int) jtbEspecialidades.getValueAt(jtbEspecialidades.getSelectedRow(), 0);
//        }
//        return id;
//    }

    @Override
    public int getIdEspecialidad() {
        int id = 0;
//        id = jcbEspecialidades.getSelectedIndex();
        Item selectedItem = (Item) jcbEspecialidades.getSelectedItem();
        if (selectedItem != null) {
            id = selectedItem.getId();
        }
        return id;
    }

    @Override
    public void actualizarEspecialidad(ArrayList<Item> data) {
        modelCombo = new DefaultComboBoxModel<>();
        jcbEspecialidades.setModel(modelCombo);
        data.forEach((item) -> {
            modelCombo.addElement(item);
        });
    }

    @Override
    public void actualizarHorario(ArrayList<String> data) {
        jtaHorario.setText("");
        for (String string : data) {
            jtaHorario.append(string + "\n");
        }
    }
}
